USE sportsradar;
-- 1.This query fetches all competitions along with their category name

SELECT competitions.name AS competition_name, categories.name AS category_name
FROM competitions
JOIN categories ON competitions.category_id = categories.id;


-- 2.Count the number of competitions in each category

SELECT categories.name AS category_name, COUNT(competitions.id) AS competition_count
FROM competitions
JOIN categories ON competitions.category_id = categories.id
GROUP BY categories.name;

-- 3.Find all competitions of type 'doubles'

SELECT id, name, gender,  category_id
FROM competitions
WHERE type = 'doubles';

-- 4.Get competitions that belong to a specific category (replace 'ITF Men' with any category name)

SELECT c.id, c.name, c.gender, c.type, cat.name AS category_name
FROM competitions c
JOIN categories cat ON c.category_id = cat.id
WHERE cat.name = 'ITF Women'; 

-- 5.Identify parent competitions and their sub-competitions

SELECT parent.id AS parent_id, parent.name AS parent_name, 
       child.id AS sub_competition_id, child.name AS sub_competition_name
FROM competitions child
JOIN competitions parent ON child.parent_id = parent.id
ORDER BY parent.name, child.name;

-- 6complexes.

SELECT id, name
FROM competitions
WHERE category_name = 'ATP';

-- 7.Listof Top-LevelCompetitions

SELECT c.id, c.name 
FROM competitions c
LEFT JOIN categories cat ON c.name = cat.name
WHERE cat.name IS NULL; 

For the complex table 
--- 1.
SELECT v.venue_name, c.complex_name
FROM venues v
LEFT JOIN complexes c ON v.complex_id = c.complex_id;  

-- 2. 
SELECT c.complex_name, COUNT(v.venue_id) AS venue_count
FROM complexes c
LEFT JOIN venues v ON c.complex_id = v.complex_id
GROUP BY c.complex_name;

-- 3. Select venue details from the venues table

SELECT venue_id, venue_name, city_name, country_name, country_code, timezone 
FROM venues 
WHERE country_name = 'India';

-- 4. Retrieve all venues along with their respective timezones

SELECT venue_id, venue_name, timezone 
FROM venues;

-- 5.Retrieve complex IDs and names that have more than one venue

SELECT c.complex_id, c.complex_name, COUNT(v.venue_id) AS venue_count
FROM complexes c
JOIN venues v ON c.complex_id = v.complex_id
GROUP BY c.complex_id, c.complex_name
HAVING COUNT(v.venue_id) > 1;

-- 6.Retrieve country-wise list of venues

SELECT country_name, COUNT(venue_id) AS total_venues

-- 7. Retrieve all venues for a specific complex (e.g., "Nacional")

SELECT v.venue_id, v.venue_name, v.city_name, v.country_name, v.timezone, c.complex_name
FROM venues v
JOIN complexes c ON v.complex_id = c.complex_id
WHERE c.complex_name = 'Taipei Arena'

-- 1. Retrieve all competitors along with their rank, movement, points, and competitions played

SELECT 
    competitors.competitor_id,        
    competitors.name AS competitor_name,  
    competitors.country,              
    competitors.country_code,    
    competitor_rankings.rank,         
    competitor_rankings.movement,     
    competitor_rankings.points,       
    competitor_rankings.competitions_played
FROM competitors
JOIN competitor_rankings 
    ON competitors.competitor_id = competitor_rankings.competitor_id;


-- 2.Get competitors ranked in the top 5

SELECT 
    competitors.competitor_id,        
    competitors.name AS competitor_name,  
    competitors.country,              
    competitors.country_code,         
    competitor_rankings.rank,        
    competitor_rankings.points        
FROM competitors
JOIN competitor_rankings 
    ON competitors.competitor_id = competitor_rankings.competitor_id
WHERE competitor_rankings.rank <= 5  -- Filter for top 5 ranks
ORDER BY competitor_rankings.rank ASC;  -- Sort by rank in ascending order

-- 3.Get competitors with no rank movement (stable rank)

SELECT 
    competitors.competitor_id,        
    competitors.name AS competitor_name,  
    competitors.country,              
    competitors.country_code,         
    competitor_rankings.rank,         
    competitor_rankings.points,       
    competitor_rankings.movement      
FROM competitors
JOIN competitor_rankings 
    ON competitors.competitor_id = competitor_rankings.competitor_id
WHERE competitor_rankings.movement = 0  -- Filter for stable ranks
ORDER BY competitor_rankings.rank ASC;  

-- 4.Get total ranking points of competitors from a specific country (Croatia)

SELECT 
    competitors.country,              
    competitors.country_code,         
    SUM(competitor_rankings.points) AS total_points  
FROM competitors
JOIN competitor_rankings 
    ON competitors.competitor_id = competitor_rankings.competitor_id
WHERE competitors.country = 'India'  
GROUP BY competitors.country, competitors.country_code;

-- 5.Count the number of competitors per country

SELECT 
    competitors.country,               
    competitors.country_code,         
    COUNT(competitors.competitor_id) AS total_competitors  
FROM competitors
GROUP BY competitors.country, competitors.country_code
ORDER BY total_competitors DESC;  

-- 6. Find competitors with the highest points in the current week

SELECT 
    c.competitor_id,  
    c.name AS competitor_name,  
    c.country,         
    cr.rank,           
    cr.points          
FROM competitor_rankings cr
JOIN competitors c ON cr.competitor_id = c.competitor_id
WHERE cr.points = (SELECT MAX(points) FROM competitor_rankings);


DELIMITER //
CREATE PROCEDURE GetTopCompetitors()
BEGIN
    SELECT 
        c.competitor_id,   
        c.name AS competitor_name,  
        c.country,         
        cr.rank,           
        cr.points          
    FROM competitor_rankings cr
    JOIN competitors c ON cr.competitor_id = c.competitor_id
    WHERE cr.points = (SELECT MAX(points) FROM competitor_rankings);
END //
DELIMITER ;














